name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # cabextract for fonts 
      - name: Setup prerequisites
        run: |
          sudo apt-get update
          sudo apt-get -y install fop cabextract wget p7zip-full libxml2-utils

          # Install fontforge
          sudo apt-get -y install software-properties-common
          sudo add-apt-repository ppa:fontforge/fontforge
          sudo apt-get update
          sudo apt-get -y install fontforge

          # Install fonts
          sudo apt-get -y install fonts-freefont-ttf fonts-nanum fonts-droid-fallback

          # If necessary
          echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
          sudo apt-get install ttf-mscorefonts-installer

      - name: Setup Cambria fonts
        run: |
          # Setup Cambria
          curl -Ls https://gist.github.com/maxwelleite/10774746/raw/ttf-vista-fonts-installer.sh | sudo bash
          sudo chown -R $(whoami) /usr/share/fonts/
          mkdir -p ~/.fonts
          cp -a /usr/share/fonts/* ~/.fonts
          ls -alR ~/.fonts

      - name: Setup CJK fonts
        run: |
          cd ~/.fonts
          curl -Ls https://github.com/Pal3love/Source-Han-TrueType/raw/master/SourceHanSans.7z -o ~/.fonts/hansans.7z
          7z x hansans.7z
          ls -alR ~/.fonts

      - uses: actions/checkout@master

      - name: Build
        run: |
          make all

      - name: Run tests
        env:
          MN_PDF_FONT_PATH: ~/.fonts
        run: |
          make test

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/mn2pdf-1.0.jar
          asset_name: mn2pdf-1.0.jar
          asset_content_type: application/java-archive
